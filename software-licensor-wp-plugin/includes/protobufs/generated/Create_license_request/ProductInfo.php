<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: create_license.proto

namespace Create_license_request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * license-type-specific product information
 *
 * Generated from protobuf message <code>create_license_request.ProductInfo</code>
 */
class ProductInfo extends \Google\Protobuf\Internal\Message
{
    protected $license_type;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Create_license_request\SubscriptionLicense $subscription
     *     @type \Create_license_request\PerpetualLicense $perpetual_license
     *     @type \Create_license_request\TrialLicense $trial_license
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\CreateLicense::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.create_license_request.SubscriptionLicense subscription = 1;</code>
     * @return \Create_license_request\SubscriptionLicense|null
     */
    public function getSubscription()
    {
        return $this->readOneof(1);
    }

    public function hasSubscription()
    {
        return $this->hasOneof(1);
    }

    /**
     * Generated from protobuf field <code>.create_license_request.SubscriptionLicense subscription = 1;</code>
     * @param \Create_license_request\SubscriptionLicense $var
     * @return $this
     */
    public function setSubscription($var)
    {
        GPBUtil::checkMessage($var, \Create_license_request\SubscriptionLicense::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.create_license_request.PerpetualLicense perpetual_license = 2;</code>
     * @return \Create_license_request\PerpetualLicense|null
     */
    public function getPerpetualLicense()
    {
        return $this->readOneof(2);
    }

    public function hasPerpetualLicense()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>.create_license_request.PerpetualLicense perpetual_license = 2;</code>
     * @param \Create_license_request\PerpetualLicense $var
     * @return $this
     */
    public function setPerpetualLicense($var)
    {
        GPBUtil::checkMessage($var, \Create_license_request\PerpetualLicense::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.create_license_request.TrialLicense trial_license = 3;</code>
     * @return \Create_license_request\TrialLicense|null
     */
    public function getTrialLicense()
    {
        return $this->readOneof(3);
    }

    public function hasTrialLicense()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>.create_license_request.TrialLicense trial_license = 3;</code>
     * @param \Create_license_request\TrialLicense $var
     * @return $this
     */
    public function setTrialLicense($var)
    {
        GPBUtil::checkMessage($var, \Create_license_request\TrialLicense::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getLicenseType()
    {
        return $this->whichOneof("license_type");
    }

}

