<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: request.proto

namespace Request;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Some information that is necessary to decrypt the request
 *
 * Generated from protobuf message <code>request.DecryptInfo</code>
 */
class DecryptInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * the ecdh key used for decrypting the request
     *
     * Generated from protobuf field <code>bytes server_ecdh_key_id = 1;</code>
     */
    protected $server_ecdh_key_id = '';
    /**
     * the `info` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_info = 3;</code>
     */
    protected $ecdh_info = '';
    /**
     * the `salt` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_salt = 4;</code>
     */
    protected $ecdh_salt = '';
    protected $client_ecdh_pubkey;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $server_ecdh_key_id
     *           the ecdh key used for decrypting the request
     *     @type string $pem
     *     @type string $der
     *     @type string $ecdh_info
     *           the `info` string for use in an HKDF for decrypting the request
     *     @type string $ecdh_salt
     *           the `salt` string for use in an HKDF for decrypting the request
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Request::initOnce();
        parent::__construct($data);
    }

    /**
     * the ecdh key used for decrypting the request
     *
     * Generated from protobuf field <code>bytes server_ecdh_key_id = 1;</code>
     * @return string
     */
    public function getServerEcdhKeyId()
    {
        return $this->server_ecdh_key_id;
    }

    /**
     * the ecdh key used for decrypting the request
     *
     * Generated from protobuf field <code>bytes server_ecdh_key_id = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setServerEcdhKeyId($var)
    {
        GPBUtil::checkString($var, False);
        $this->server_ecdh_key_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string pem = 5;</code>
     * @return string
     */
    public function getPem()
    {
        return $this->readOneof(5);
    }

    public function hasPem()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>string pem = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setPem($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes der = 6;</code>
     * @return string
     */
    public function getDer()
    {
        return $this->readOneof(6);
    }

    public function hasDer()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>bytes der = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setDer($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * the `info` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_info = 3;</code>
     * @return string
     */
    public function getEcdhInfo()
    {
        return $this->ecdh_info;
    }

    /**
     * the `info` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_info = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setEcdhInfo($var)
    {
        GPBUtil::checkString($var, False);
        $this->ecdh_info = $var;

        return $this;
    }

    /**
     * the `salt` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_salt = 4;</code>
     * @return string
     */
    public function getEcdhSalt()
    {
        return $this->ecdh_salt;
    }

    /**
     * the `salt` string for use in an HKDF for decrypting the request
     *
     * Generated from protobuf field <code>bytes ecdh_salt = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setEcdhSalt($var)
    {
        GPBUtil::checkString($var, False);
        $this->ecdh_salt = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getClientEcdhPubkey()
    {
        return $this->whichOneof("client_ecdh_pubkey");
    }

}

