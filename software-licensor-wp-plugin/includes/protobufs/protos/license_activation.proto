syntax = "proto3";

package license_activation_request;

message LicenseActivationRequest {
    // the license code. should look like:
    // 1234-5678-90ab-cdef-1234
    // or caps or with an offline code:
    // 1234-5678-90ab-cdef-1234-offline-abcd
    string license_code = 1;
    string machine_id = 2;
    // hardware/simd statistics
    Stats hardware_stats = 4;
    repeated string product_ids = 5;
}

message Stats {
    string os_name = 1;
    string computer_name = 2;
    bool is_64_bit = 3;
    string users_language = 4;
    string display_language = 5;
    uint32 num_logical_cores = 6;
    uint32 num_physical_cores = 7;
    uint32 cpu_freq_mhz = 8;
    uint32 ram_mb = 34;
    uint32 page_size = 35;
    string cpu_vendor = 9;
    string cpu_model = 10;
    bool has_mmx = 11;
    bool has_3d_now = 12;
    bool has_fma3 = 13;
    bool has_fma4 = 14;
    bool has_sse = 15;
    bool has_sse2 = 16;
    bool has_sse3 = 17;
    bool has_ssse3 = 18;
    bool has_sse41 = 19;
    bool has_sse42 = 20;
    bool has_avx = 21;
    bool has_avx2 = 22;
    bool has_avx512f = 23;
    bool has_avx512bw = 24;
    bool has_avx512cd = 25;
    bool has_avx512dq = 26;
    bool has_avx512er = 27;
    bool has_avx512ifma = 28;
    bool has_avx512pf = 29;
    bool has_avx512vbmi = 30;
    bool has_avx512vl = 31;
    bool has_avx512vpopcntdq = 32;
    bool has_neon = 33;
}

message LicenseKeyFile {
    string product_id = 1;
    string customer_first_name = 2;
    string customer_last_name = 3;
    string customer_email = 4;
    string product_version = 5;
    string license_code = 10;
    string license_type = 11;
    string machine_id = 20;
    uint64 timestamp = 21;
    // determines when the license expires or needs to be renewed
    uint64 expiration_timestamp = 25;
    // determines when the client should attempt to renew the license
    // expiration. Useful for allowing users to deactivate their machines 
    // that they've stopped using
    // It is also useful for subscriptions and trials automatically renewing
    // the expiration
    uint64 check_back_timestamp = 26;
    string message = 30;
    // a response code; valid codes are
    // 1: success
    // 2: no license found
    // 4: reached the machine limit
    // 8: trial ended
    // 16: license no longer active
    // 32: incorrect offline code
    // 64: Offline codes are not allowed for this product
    // 128: Invalid License Code
    // 256: Machine Deactivated
    uint32 message_code = 31;
    // the message to show if the license ever expires on the user
    string post_expiration_message = 35;
}

message LicenseActivationResponse {
    // map of product ids to license key files
    map<string, LicenseKeyFile> key_files = 1;
    // map of product ids to licensing errors
    map<string, string> licensing_errors = 2;
    // map of product ids to key file signature
    map<string, bytes> key_file_signatures = 5;
}